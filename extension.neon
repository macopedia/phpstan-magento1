parametersSchema:
    magentoRootPath: string()
    enforceMagicMethodDocBlock: bool()
parameters:
    magentoRootPath: %currentWorkingDirectory%/htdocs
    enforceMagicMethodDocBlock: false
    excludePaths:
        - */app/code/local/*/*/data/*
        - */app/code/local/*/*/sql/*
    bootstrapFiles:
        - phpstan-bootstrap.php
    scanFiles:
        - %magentoRootPath%/app/Mage.php
    typeAliases:
        Mage_Catalog_Model_Entity_Product_Collection: 'Mage_Catalog_Model_Resource_Product_Collection'
        callback: 'callable'
    earlyTerminatingMethodCalls:
        Mage:
            - throwException

services:
    mageCoreConfig:
        class: PHPStanMagento1\Config\MageCoreConfig

    ## Dynamic Return Type Extension to return correct class from Mage::getModel() etc
    -
        class: PHPStanMagento1\Type\MageTypeExtension
        arguments:
            mageCoreConfig: @mageCoreConfig
            className: Mage
        tags:
            - phpstan.broker.dynamicStaticMethodReturnTypeExtension
    -
        class: PHPStanMagento1\Type\MageTypeExtension
        arguments:
            mageCoreConfig: @mageCoreConfig
            className: Mage_Core_Block_Abstract
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
    -
        class: PHPStanMagento1\Type\MageTypeExtension
        arguments:
            mageCoreConfig: @mageCoreConfig
            className: Mage_Core_Model_Abstract
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
    -
        class: PHPStanMagento1\Type\MageTypeExtension
        arguments:
            mageCoreConfig: @mageCoreConfig
            className: Mage_Core_Model_Layout
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
    -
        class: PHPStanMagento1\Type\MageTypeExtension
        arguments:
            mageCoreConfig: @mageCoreConfig
            className: Mage_Core_Controller_Varien_Action
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension

    ## Rule to detect invalid class names returned by the Dynamic Return Type Extension
    -
        class: PHPStanMagento1\Rules\MageInvalidTypeRule
        arguments:
            mageCoreConfig: @mageCoreConfig
        tags:
            - phpstan.rules.rule

    ## Class Reflection Extension for Varien_Object's magic methods
    -
        class: PHPStanMagento1\Reflection\VarienObjectReflectionExtension
        arguments:
            enforceDocBlock: %enforceMagicMethodDocBlock%
        tags:
            - phpstan.broker.methodsClassReflectionExtension

    ## PHP-Parser Extension to allow phtml and data install scripts to access protected methods with $this
    -
        class: PHPStanMagento1\PhpDoc\BindThisScopeResolverExtension
        tags:
            - phpstan.parser.richParserNodeVisitor
            - phpstan.phpDoc.typeNodeResolverExtension
